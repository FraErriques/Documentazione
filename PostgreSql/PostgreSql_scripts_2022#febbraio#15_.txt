-- Table: public.contacts

-- DROP TABLE public.contacts;

CREATE TABLE IF NOT EXISTS public.contacts
(
    contact_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    customer_id integer,
    contact_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(15) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT contacts_pkey PRIMARY KEY (contact_id),
    CONSTRAINT fk_customer FOREIGN KEY (customer_id)
        REFERENCES public.customers (customer_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.contacts
    OWNER to postgres;
	
-- Table: public.accounts

-- DROP TABLE public.accounts;

CREATE TABLE IF NOT EXISTS public.accounts
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    balance numeric(15,2) NOT NULL,
    CONSTRAINT accounts_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.accounts
    OWNER to postgres;


-- Table: public.customers

-- DROP TABLE public.customers;

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    customer_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
)

TABLESPACE pg_default;

ALTER TABLE public.customers
    OWNER to postgres;

	
-- Table: public.zetadump

-- DROP TABLE public.zetadump;

CREATE TABLE IF NOT EXISTS public.zetadump
(
    id_zetadump integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    re_s double precision NOT NULL,
    im_s double precision NOT NULL,
    re_z double precision NOT NULL,
    im_z double precision NOT NULL,
    re_image double precision NOT NULL,
    im_image double precision NOT NULL,
    CONSTRAINT zetadump_pkey PRIMARY KEY (id_zetadump)
)

TABLESPACE pg_default;

ALTER TABLE public.zetadump
    OWNER to postgres;

	
-- Table: public.dump2021dez30

-- DROP TABLE public.dump2021dez30;

CREATE TABLE IF NOT EXISTS public.dump2021dez30
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    abscissa double precision,
    ordinate double precision,
    CONSTRAINT dump2021dez30_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.dump2021dez30
    OWNER to postgres;
	
----
-- PROCEDURE: public.transfer(integer, integer, numeric)

-- DROP PROCEDURE public.transfer(integer, integer, numeric);

CREATE OR REPLACE PROCEDURE public.transfer(
	IN sender integer,
	IN receiver integer,
	IN amount numeric)
LANGUAGE 'plpgsql'
AS $BODY$
begin
    -- subtracting the amount from the sender's account 
    update accounts 
    set balance = balance - amount 
    where id = sender;

    -- adding the amount to the receiver's account
    update accounts 
    set balance = balance + amount 
    where id = receiver;

    commit;
end;
$BODY$;
	
-- PROCEDURE: public.usp_dump2021dez30_insert(double precision, double precision)

-- DROP PROCEDURE public.usp_dump2021dez30_insert(double precision, double precision);

CREATE OR REPLACE PROCEDURE public.usp_dump2021dez30_insert(
	IN par_abscissa double precision,
	IN par_ordinate double precision)
LANGUAGE 'plpgsql'
AS $BODY$
begin
insert into dump2021Dez30(
abscissa,
ordinate   ) values(
Par_abscissa,
Par_ordinate );
commit;
end;
$BODY$;
-----------------------
-- PROCEDURE: public.usp_zetadump_insert(double precision, double precision, double precision, double precision, double precision, double precision)

-- DROP PROCEDURE public.usp_zetadump_insert(double precision, double precision, double precision, double precision, double precision, double precision);

CREATE OR REPLACE PROCEDURE public.usp_zetadump_insert(
	IN par_re_s double precision,
	IN par_im_s double precision,
	IN par_re_z double precision,
	IN par_im_z double precision,
	IN par_re_image double precision,
	IN par_im_image double precision)
LANGUAGE 'plpgsql'
AS $BODY$
begin
insert into zetadump(
    re_s,
    im_s,
    re_z,
    im_z,
    re_image,
    im_image
  ) values(
par_re_s,
par_im_s,
par_re_z,
par_im_z,
par_re_image,
par_im_image   );
commit;
end;
$BODY$;
------------------------------
	
	